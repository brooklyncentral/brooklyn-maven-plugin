{"name":"Brooklyn Maven Plugin","tagline":"A Maven plugin to help test Apache Brooklyn blueprints ","body":"Brooklyn Maven Plugin\r\n=====================\r\n\r\nA Maven plugin to help test your [Apache\r\nBrooklyn](https://brooklyn.incubator.apache.org/) blueprints.\r\n\r\n### Download\r\n\r\nInclude this plugin in your pom:\r\n```xml\r\n<plugin>\r\n    <groupId>io.brooklyn.maven</groupId>\r\n    <artifactId>brooklyn-maven-plugin</artifactId>\r\n    <version>0.1.0-SNAPSHOT</version>\r\n</plugin>\r\n```\r\n\r\nAnd these plugin repositories:\r\n```xml\r\n<pluginRepositories>\r\n    <pluginRepository>\r\n        <id>apache-snapshots</id>\r\n        <url>https://repository.apache.org/content/repositories/snapshots</url>\r\n        <releases>\r\n            <enabled>false</enabled>\r\n        </releases>\r\n        <snapshots>\r\n            <enabled>true</enabled>\r\n        </snapshots>\r\n    </pluginRepository>\r\n    <pluginRepository>\r\n        <id>cloudsoft-snapshot</id>\r\n        <url>http://ccweb.cloudsoftcorp.com/maven/libs-snapshot-local/</url>\r\n        <releases>\r\n            <enabled>false</enabled>\r\n        </releases>\r\n        <snapshots>\r\n            <enabled>true</enabled>\r\n        </snapshots>\r\n    </pluginRepository>\r\n</pluginRepositories>\r\n```\r\n\r\n### Goals\r\n\r\n<dl>\r\n<dt><strong>deploy</strong></dt>\r\n<dd>\r\nInstruct an existing Brooklyn server to deploy the given blueprint.\r\n</dd>\r\n\r\n<dt><strong>sensor</strong></dt>\r\n<dd>\r\nInstruct a Brooklyn server to stop the application with the given ID.\r\n</dd>\r\n\r\n<dt><strong>stop</strong></dt>\r\n<dd>\r\nFetch the value of a sensor on entities at a given server whose types match\r\na regular expression.\r\n</dd>\r\n\r\n<dt><strong>help</strong></dt>\r\n<dd>\r\nDisplay help information on brooklyn-maven-plugin.\r\n</dd>\r\n</dl>\r\n\r\n\r\n### Example\r\n\r\nThe [example-pom](src/test/projects/example-app/pom.xml) project:\r\n\r\n* Deploys a blueprint from a file that runs a\r\n  [TomcatServer](https://brooklyn.incubator.apache.org/learnmore/catalog/entities/brooklyn.entity.webapp.tomcat.TomcatServer.html)\r\n  and an EmptySoftwareProcess.\r\n* Queries Brooklyn for the main URL of the Tomcat application (the\r\n  `webapp.url` sensor).\r\n* Uses `maven-antrun-plugin` to echo these values to the console.\r\n* Stops the deployment before Maven exits.\r\n\r\nThe important bits of the pom are:\r\n```xml\r\n<plugin>\r\n    <groupId>io.brooklyn.maven</groupId>\r\n    <artifactId>brooklyn-maven-plugin</artifactId>\r\n    <version>0.1.0-SNAPSHOT</version>\r\n    <executions>\r\n        <execution>\r\n            <id>Deploy blueprint</id>\r\n            <goals>\r\n                <goal>deploy</goal>\r\n            </goals>\r\n            <configuration>\r\n                <server>${server}</server>\r\n                <blueprint>${project.basedir}/blueprint.yaml</blueprint>\r\n                <propertyName>appId</propertyName>\r\n            </configuration>\r\n        </execution>\r\n        <execution>\r\n            <id>Query sensor value</id>\r\n            <phase>pre-integration-test</phase>\r\n            <goals>\r\n                <goal>sensor</goal>\r\n            </goals>\r\n            <configuration>\r\n                <server>${server}</server>\r\n                <application>${appId}</application>\r\n                <sensor>webapp.url</sensor>\r\n                <typeRegex>.*Tomcat.*</typeRegex>\r\n                <propertyName>sensorVal</propertyName>\r\n            </configuration>\r\n        </execution>\r\n        <execution>\r\n            <id>Stop the application</id>\r\n            <goals>\r\n                <goal>stop</goal>\r\n            </goals>\r\n            <configuration>\r\n                <server>${server}</server>\r\n                <application>${appId}</application>\r\n            </configuration>\r\n        </execution>\r\n    </executions>\r\n</plugin>\r\n```\r\n\r\nYou can test this project by starting Brooklyn and running `mvn clean install`\r\nfrom the `example-app` directory. If Brooklyn starts on any port other than\r\n8081 then run with `-Dserver=http://host:port`.\r\n\r\nAt the end of the build you should see output like:\r\n```\r\n[INFO] --- maven-antrun-plugin:1.3:run (default) @ test ---\r\n[INFO] Executing tasks\r\n    [echo] Maven plugin example results:\r\n    [echo] Application: T0tERELL\r\n    [echo] Sensor value: http://127.0.0.1:8080/\r\n```\r\n\r\n### Caveats\r\n\r\nYou may currently only query for entities by their type. If two or more\r\nentities match the query goal's regular expression the property will be set to\r\n`result1,result2,...`.\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}